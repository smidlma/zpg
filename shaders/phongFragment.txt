#version 400
in vec4 ex_worldPosition;
in vec4 ex_worldNormal;
in vec3 objectColor;
out vec4 frag_colour;
uniform vec3 viewPos;
void main(void)
{
    float specularStrength = 0.5;
    vec3 lightPosition = vec3(0.0,10.0,0.0);
    vec4 lightColor = vec4( 0.385, 0.647, 0.812, 1.0);
    vec4 lightDir = normalize(vec4(lightPosition, 1) - ex_worldPosition);  
    float dot_product = max(dot(ex_worldNormal, lightDir ), 0.0);
    vec4 diffuse = dot_product * lightColor;
    vec4 ambient = vec4( 0.1, 0.1, 0.1, 1.0);
    
    vec4 viewDir = normalize(vec4(viewPos, 1) - ex_worldPosition);
    vec4 reflectDir = reflect(-lightDir, ex_worldNormal);
    float spec = pow(max(dot(viewDir, reflectDir), 0.0), 64);
    vec4 specular = specularStrength * spec * lightColor; 
    frag_colour = (ambient + diffuse + specular); // * vec4(objectColor, 1);
}